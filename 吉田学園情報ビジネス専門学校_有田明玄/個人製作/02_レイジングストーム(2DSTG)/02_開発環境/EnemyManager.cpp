//=============================================================================
//
// 敵の管理
// Author : 有田明玄
//
//=============================================================================

//インクルード
#include "EnemyManager.h"
#include"Enemy.h"
#include"Boss.h"

//静的メンバ変数
CBoss*CEnemyManager::m_pBoss = nullptr;
//=============================================================================
// コンストラクタ
//=============================================================================
CEnemyManager::CEnemyManager()
{
	for (int i = 0; i < MAX_ENEMY; i++)
	{
		m_aMoveptn[i] = CEnemy::MOVE_INVALID;
		m_aPos[i] = {};
		m_anFrame[i] = NULL;
	}
}

//=============================================================================
// デストラクタ
//=============================================================================
CEnemyManager::~CEnemyManager()
{

}

//=============================================================================
//初期化
//=============================================================================
void CEnemyManager::Init()
{
	
}

//=============================================================================
//終了
//=============================================================================
void CEnemyManager::Uninit()
{

}

//=============================================================================
//更新
//=============================================================================
void CEnemyManager::Update()
{
	for (int i = 0; i < MAX_ENEMY; i++)
	{
		if (m_aPos[i] != nullptr)
		{
			m_anFrame[i]--;
			if (m_anFrame[i] == 0)
			{
				if (m_aMoveptn[i] == CEnemy::MOVE_BOSS_BASE)
				{
					m_pBoss = CBoss::Create();
				}
				else
				{
					CEnemy::Create(m_aMoveptn[i], m_aPos[i]);
					m_aMoveptn[i] = CEnemy::MOVE_INVALID;
				}
			}
		}
	}
}

//=============================================================================
//敵の設定
//=============================================================================
void CEnemyManager::SetEnemy(CEnemy::MOVEPATTERN moveptn, D3DXVECTOR3 pos, int frame)
{
	for (int i = 0; i < MAX_ENEMY; i++)
	{
		if (m_aMoveptn[i] == CEnemy::MOVE_INVALID)
		{
			m_aMoveptn[i] = moveptn;
			m_aPos[i] = pos;
			m_anFrame[i] = frame;
			break;
		}
	}
}

//=============================================================================
//ボスの情報取得
//=============================================================================
CBoss* CEnemyManager::GetBoss()	//敵の設定
{
	return m_pBoss;
}